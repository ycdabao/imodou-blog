{"remainingRequest":"D:\\imodou-blog\\vue-manage-system\\node_modules\\babel-loader\\lib\\index.js!D:\\imodou-blog\\vue-manage-system\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\imodou-blog\\vue-manage-system\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\imodou-blog\\vue-manage-system\\src\\components\\page\\article_add.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\imodou-blog\\vue-manage-system\\src\\components\\page\\article_add.vue","mtime":1590149811315},{"path":"D:\\imodou-blog\\vue-manage-system\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\imodou-blog\\vue-manage-system\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\imodou-blog\\vue-manage-system\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\imodou-blog\\vue-manage-system\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mavonEditor } from 'mavon-editor';\nimport 'mavon-editor/dist/css/index.css';\nimport VueCropper from 'vue-cropperjs';\nimport Axios from 'axios';\nexport default {\n  name: 'markdown',\n  data: function data() {\n    return {\n      content: '',\n      html: '',\n      configs: {},\n      form: {},\n      imgSrc: '',\n      cropImg: '',\n      dialogVisible: false,\n      defaultSrc: require(\"../../assets/img/img.jpg\"),\n      options: []\n    };\n  },\n  components: {\n    mavonEditor: mavonEditor,\n    VueCropper: VueCropper\n  },\n  methods: {\n    // 将图片上传到服务器，返回地址替换到md中\n    $imgAdd: function $imgAdd(pos, $file) {\n      var _this = this;\n\n      var formdata = new FormData();\n      formdata.append('file', $file); // 这里没有服务器供大家尝试，可将下面上传接口替换为你自己的服务器接口\n\n      Axios({\n        url: '/api/article/upload',\n        method: 'post',\n        data: formdata,\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      }).then(function (res) {\n        _this.$refs.md.$img2Url(pos, res.data.data);\n      });\n    },\n    change: function change(value, render) {\n      // render 为 markdown 解析后的结果\n      this.html = render;\n    },\n    submit: function submit() {\n      var _this2 = this;\n\n      // console.log(this.form);\n      // console.log(this.content);\n      // console.log(this.html);\n      this.form.content = this.content;\n      Axios.post(\"/api/article\", this.form).then(function (res) {\n        if (res.data.flag) {\n          _this2.$message.success('提交成功！');\n        } else {\n          _this2.$message.error(res.data.message);\n        }\n      });\n    },\n    setImage: function setImage(e) {\n      var _this3 = this;\n\n      var file = e.target.files[0];\n\n      if (!file.type.includes('image/')) {\n        return;\n      }\n\n      var reader = new FileReader();\n\n      reader.onload = function (event) {\n        _this3.dialogVisible = true;\n        _this3.imgSrc = event.target.result;\n        _this3.$refs.cropper && _this3.$refs.cropper.replace(event.target.result);\n      };\n\n      reader.readAsDataURL(file);\n      var formData = new FormData();\n      formData.append('file', e.target.files[0]);\n      Axios({\n        url: \"/api/article/upload\",\n        method: 'post',\n        data: formData,\n        processData: false,\n        // 告诉axios不要去处理发送的数据(重要参数)\n        contentType: false // 告诉axios不要去设置Content-Type请求头\n\n      }).then(function (res) {\n        if (res.data.flag) {\n          _this3.form.coverPhoto = res.data.data;\n        } else {\n          _this3.$message.error(res.data.message);\n        }\n      });\n    },\n    cropImage: function cropImage() {\n      this.cropImg = this.$refs.cropper.getCroppedCanvas().toDataURL();\n    },\n    cancelCrop: function cancelCrop() {\n      this.dialogVisible = false;\n      this.cropImg = this.defaultSrc;\n    },\n    imageuploaded: function imageuploaded(res) {\n      console.log(res);\n    },\n    handleError: function handleError() {\n      this.$notify.error({\n        title: '上传失败',\n        message: '图片上传接口上传失败，可更改为自己的服务器接口'\n      });\n    },\n    //选择父类\n    handleChange: function handleChange(value) {\n      this.form.categories = value;\n    }\n  },\n  created: function created() {\n    var _this4 = this;\n\n    this.cropImg = this.defaultSrc; //查询分类\n\n    Axios.get(\"/api/category/tree\").then(function (response) {\n      _this4.options = response.data;\n    });\n  }\n};",{"version":3,"sources":["article_add.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n\r\n    <div>\r\n        <div class=\"crumbs\">\r\n            <el-breadcrumb separator=\"/\">\r\n                <el-breadcrumb-item><i class=\"el-icon-lx-calendar\"></i> 文章</el-breadcrumb-item>\r\n                <el-breadcrumb-item>发布</el-breadcrumb-item>\r\n            </el-breadcrumb>\r\n        </div>\r\n        <div class=\"container\">\r\n           <div class=\"form-box\" style=\"width:98%\">\r\n                <el-form ref=\"form\" :model=\"form\" label-width=\"80px\">\r\n                    <el-form-item label=\"标题\">\r\n                        <el-input v-model=\"form.title\"></el-input>\r\n                    </el-form-item>\r\n                    <el-form-item label=\"摘要\">\r\n                        <el-input v-model=\"form.summary\" style=\"width:100%\"></el-input>\r\n                    </el-form-item>\r\n                              <el-form-item label=\"父类\">\r\n                    <el-cascader ref=\"categoryCascader\" :v-model=\"form.categories\"\r\n                       \r\n                        :options=\"options\"\r\n                     \r\n                        @change=\"handleChange\"   ></el-cascader>\r\n                </el-form-item>\r\n                    <el-form-item label=\"封面\">\r\n                        <div class=\"crop-demo\">\r\n                            <img :src=\"cropImg\" class=\"pre-img\" style=\"width:150px;height:100px\">\r\n                            <div class=\"crop-demo-btn\">选择图片\r\n                                <input class=\"crop-input\" type=\"file\" name=\"image\" accept=\"image/*\" @change=\"setImage\"/>\r\n                            </div>\r\n                        </div>\r\n                \r\n                        <el-dialog title=\"裁剪图片\" :visible.sync=\"dialogVisible\" width=\"30%\">\r\n                            <vue-cropper ref='cropper' :src=\"imgSrc\" :ready=\"cropImage\" :zoom=\"cropImage\" :cropmove=\"cropImage\" style=\"width:100%;height:300px;\"></vue-cropper>\r\n                            <span slot=\"footer\" class=\"dialog-footer\">\r\n                                <el-button @click=\"cancelCrop\">取 消</el-button>\r\n                                <el-button type=\"primary\" @click=\"dialogVisible = false\">确 定</el-button>\r\n                            </span>\r\n                        </el-dialog>\r\n                    </el-form-item>\r\n                </el-form>\r\n           </div>\r\n            <mavon-editor v-model=\"content\" ref=\"md\" @imgAdd=\"$imgAdd\" @change=\"change\" style=\"min-height: 600px\"/>\r\n            <el-button class=\"editor-btn\" type=\"primary\" @click=\"submit\">提交</el-button>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import { mavonEditor } from 'mavon-editor'\r\n    import 'mavon-editor/dist/css/index.css'\r\n    import VueCropper  from 'vue-cropperjs';\r\nimport Axios from 'axios';\r\n    export default {\r\n        name: 'markdown',\r\n        data: function(){\r\n            return {\r\n                content:'',\r\n                html:'',\r\n                configs: {\r\n                },\r\n                form: {\r\n               \r\n                },\r\n                imgSrc: '',\r\n                cropImg: '',\r\n                dialogVisible: false,\r\n                defaultSrc: require('../../assets/img/img.jpg'),\r\n                options:[]\r\n            }\r\n        },\r\n        components: {\r\n            mavonEditor,\r\n            VueCropper\r\n        },\r\n        methods: {\r\n            // 将图片上传到服务器，返回地址替换到md中\r\n            $imgAdd(pos, $file){\r\n                var formdata = new FormData();\r\n                formdata.append('file', $file);\r\n                // 这里没有服务器供大家尝试，可将下面上传接口替换为你自己的服务器接口\r\n                Axios({\r\n                    url: '/api/article/upload',\r\n                    method: 'post',\r\n                    data: formdata,\r\n                    headers: { 'Content-Type': 'multipart/form-data' },\r\n                }).then((res) => {\r\n                    this.$refs.md.$img2Url(pos, res.data.data);\r\n                })\r\n            },\r\n            change(value, render){\r\n                // render 为 markdown 解析后的结果\r\n                this.html = render;\r\n            },\r\n            submit(){\r\n                // console.log(this.form);\r\n                // console.log(this.content);\r\n                // console.log(this.html);\r\n\r\n                this.form.content=this.content;\r\n                Axios.post(\"/api/article\",this.form).then((res)=>{\r\n                    if(res.data.flag){\r\n                          this.$message.success('提交成功！');\r\n                    }else{\r\n                        this.$message.error(res.data.message);\r\n                    }\r\n                    \r\n                })\r\n                \r\n\r\n              \r\n            },\r\n            setImage(e){\r\n               \r\n                const file = e.target.files[0];\r\n                \r\n                if (!file.type.includes('image/')) {\r\n                    return;\r\n                }\r\n                const reader = new FileReader();\r\n                reader.onload = (event) => {\r\n              \r\n                    this.dialogVisible = true;\r\n                    this.imgSrc = event.target.result;\r\n                    this.$refs.cropper && this.$refs.cropper.replace(event.target.result);\r\n                };\r\n                reader.readAsDataURL(file);\r\n                \r\n                let formData = new FormData()\r\n                formData.append('file',e.target.files[0])\r\n                Axios({\r\n                    url:\"/api/article/upload\",\r\n                    method: 'post',\r\n                    data: formData,\r\n                    processData: false,// 告诉axios不要去处理发送的数据(重要参数)\r\n                    contentType: false,   // 告诉axios不要去设置Content-Type请求头\r\n                }).then((res)=>{\r\n                    if(res.data.flag){\r\n                        this.form.coverPhoto=res.data.data;\r\n                    }else{\r\n                        this.$message.error(res.data.message);\r\n                    }\r\n                    \r\n                })\r\n            \r\n\r\n            },\r\n            cropImage () {\r\n                this.cropImg = this.$refs.cropper.getCroppedCanvas().toDataURL();\r\n            },\r\n            cancelCrop(){\r\n                this.dialogVisible = false;\r\n                this.cropImg = this.defaultSrc;\r\n            },\r\n            imageuploaded(res) {\r\n                console.log(res)\r\n            },\r\n            handleError(){\r\n                this.$notify.error({\r\n                    title: '上传失败',\r\n                    message: '图片上传接口上传失败，可更改为自己的服务器接口'\r\n                });\r\n            },\r\n                    //选择父类\r\n            handleChange(value){\r\n    \r\n                this.form.categories=value;\r\n              \r\n            }\r\n\r\n        },\r\n        created(){\r\n            this.cropImg = this.defaultSrc;\r\n            //查询分类\r\n            Axios.get(\"/api/category/tree\").then((response)=>{\r\n            this.options=response.data;\r\n            \r\n        })\r\n        }\r\n    }\r\n</script>\r\n<style scoped>\r\n    .editor-btn{\r\n        margin-top: 20px;\r\n    }\r\n</style>\r\n<style scoped>\r\n    .content-title{\r\n        font-weight: 400;\r\n        line-height: 50px;\r\n        margin: 10px 0;\r\n        font-size: 22px;\r\n        color: #1f2f3d;\r\n    }\r\n    .pre-img{   \r\n        width: 100px;\r\n        height: 100px;\r\n        background: #f8f8f8;\r\n        border: 1px solid #eee;\r\n        border-radius: 5px;\r\n    }\r\n    .crop-demo{\r\n        display: flex;\r\n        align-items: flex-end;\r\n    }\r\n    .crop-demo-btn{\r\n        position: relative;\r\n        width: 100px;\r\n        height: 40px;\r\n        line-height: 40px;\r\n        padding: 0 20px;\r\n        margin-left: 30px;\r\n        background-color: #409eff;\r\n        color: #fff;\r\n        font-size: 14px;\r\n        border-radius: 4px;\r\n        box-sizing: border-box;\r\n    }\r\n    .crop-input{\r\n        position: absolute;\r\n        width: 100px;\r\n        height: 40px;\r\n        left: 0;\r\n        top: 0;\r\n        opacity: 0;\r\n        cursor: pointer;\r\n    }\r\n</style>"],"sourceRoot":"src/components/page"}]}