{"remainingRequest":"D:\\imodou-blog\\vue-manage-system\\node_modules\\thread-loader\\dist\\cjs.js!D:\\imodou-blog\\vue-manage-system\\node_modules\\babel-loader\\lib\\index.js!D:\\imodou-blog\\vue-manage-system\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\imodou-blog\\vue-manage-system\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\imodou-blog\\vue-manage-system\\src\\components\\page\\article_add.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\imodou-blog\\vue-manage-system\\src\\components\\page\\article_add.vue","mtime":1590149811315},{"path":"D:\\imodou-blog\\vue-manage-system\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\imodou-blog\\vue-manage-system\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\imodou-blog\\vue-manage-system\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\imodou-blog\\vue-manage-system\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\imodou-blog\\vue-manage-system\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mavonEditor } from 'mavon-editor';\nimport 'mavon-editor/dist/css/index.css';\nimport VueCropper from 'vue-cropperjs';\nimport Axios from 'axios';\nexport default {\n  name: 'markdown',\n  data: function data() {\n    return {\n      content: '',\n      html: '',\n      configs: {},\n      form: {},\n      imgSrc: '',\n      cropImg: '',\n      dialogVisible: false,\n      defaultSrc: require(\"../../assets/img/img.jpg\"),\n      options: []\n    };\n  },\n  components: {\n    mavonEditor: mavonEditor,\n    VueCropper: VueCropper\n  },\n  methods: {\n    // 将图片上传到服务器，返回地址替换到md中\n    $imgAdd: function $imgAdd(pos, $file) {\n      var _this = this;\n\n      var formdata = new FormData();\n      formdata.append('file', $file); // 这里没有服务器供大家尝试，可将下面上传接口替换为你自己的服务器接口\n\n      Axios({\n        url: '/api/article/upload',\n        method: 'post',\n        data: formdata,\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      }).then(function (res) {\n        _this.$refs.md.$img2Url(pos, res.data.data);\n      });\n    },\n    change: function change(value, render) {\n      // render 为 markdown 解析后的结果\n      this.html = render;\n    },\n    submit: function submit() {\n      var _this2 = this;\n\n      // console.log(this.form);\n      // console.log(this.content);\n      // console.log(this.html);\n      this.form.content = this.content;\n      Axios.post(\"/api/article\", this.form).then(function (res) {\n        if (res.data.flag) {\n          _this2.$message.success('提交成功！');\n        } else {\n          _this2.$message.error(res.data.message);\n        }\n      });\n    },\n    setImage: function setImage(e) {\n      var _this3 = this;\n\n      var file = e.target.files[0];\n\n      if (!file.type.includes('image/')) {\n        return;\n      }\n\n      var reader = new FileReader();\n\n      reader.onload = function (event) {\n        _this3.dialogVisible = true;\n        _this3.imgSrc = event.target.result;\n        _this3.$refs.cropper && _this3.$refs.cropper.replace(event.target.result);\n      };\n\n      reader.readAsDataURL(file);\n      var formData = new FormData();\n      formData.append('file', e.target.files[0]);\n      Axios({\n        url: \"/api/article/upload\",\n        method: 'post',\n        data: formData,\n        processData: false,\n        // 告诉axios不要去处理发送的数据(重要参数)\n        contentType: false // 告诉axios不要去设置Content-Type请求头\n\n      }).then(function (res) {\n        if (res.data.flag) {\n          _this3.form.coverPhoto = res.data.data;\n        } else {\n          _this3.$message.error(res.data.message);\n        }\n      });\n    },\n    cropImage: function cropImage() {\n      this.cropImg = this.$refs.cropper.getCroppedCanvas().toDataURL();\n    },\n    cancelCrop: function cancelCrop() {\n      this.dialogVisible = false;\n      this.cropImg = this.defaultSrc;\n    },\n    imageuploaded: function imageuploaded(res) {\n      console.log(res);\n    },\n    handleError: function handleError() {\n      this.$notify.error({\n        title: '上传失败',\n        message: '图片上传接口上传失败，可更改为自己的服务器接口'\n      });\n    },\n    //选择父类\n    handleChange: function handleChange(value) {\n      this.form.categories = value;\n    }\n  },\n  created: function created() {\n    var _this4 = this;\n\n    this.cropImg = this.defaultSrc; //查询分类\n\n    Axios.get(\"/api/category/tree\").then(function (response) {\n      _this4.options = response.data;\n    });\n  }\n};",null]}