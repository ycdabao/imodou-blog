{"remainingRequest":"D:\\imodou-blog\\vue-manage-system\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\imodou-blog\\vue-manage-system\\src\\components\\page\\article_list.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\imodou-blog\\vue-manage-system\\src\\components\\page\\article_list.vue","mtime":1590151061045},{"path":"D:\\imodou-blog\\vue-manage-system\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\imodou-blog\\vue-manage-system\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\imodou-blog\\vue-manage-system\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\imodou-blog\\vue-manage-system\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\imodou-blog\\vue-manage-system\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { fetchData } from '../../api/index';\r\nimport Axios from 'axios';\r\nexport default {\r\n    name: 'basetable',\r\n    data() {\r\n        return {\r\n            query: {\r\n                data:{},\r\n                pageIndex: 1,\r\n                pageSize: 10\r\n            },\r\n            tableData: [],\r\n            multipleSelection: [],\r\n            delList: [],\r\n\r\n            pageTotal: 0,\r\n            form: {},\r\n            idx: -1,\r\n            id: -1,\r\n            options:[]\r\n        };\r\n    },\r\n    created() {\r\n        this.getData();\r\n    },\r\n    methods: {\r\n   \r\n        getData() {\r\n\r\n          Axios.post(\"/api/article/findpage\",this.query).then((response)=>{\r\n             \r\n             if(response.data.flag){\r\n                this.$message.success(response.data.message);\r\n                this.tableData=response.data.data.rows;\r\n                this.pageTotal=response.data.data.total;   \r\n             }else{\r\n                 this.$message.error(response.data.message);\r\n             }\r\n         \r\n          })\r\n        },\r\n        // 触发搜索按钮\r\n        handleSearch() {\r\n            this.query.pageIndex=1;\r\n             Axios.post(\"/api/article/findpage\",this.query).then((response)=>{\r\n             \r\n             if(response.data.flag){\r\n                this.$message.success(response.data.message);\r\n                this.tableData=response.data.data.rows;\r\n                this.pageTotal=response.data.data.total;   \r\n             }else{\r\n                 this.$message.error(response.data.message);\r\n             }\r\n         \r\n          })\r\n        },\r\n        // 删除操作\r\n        handleDelete(index, row) {\r\n            // 二次确认删除\r\n            this.$confirm('确定要删除吗？', '提示', {\r\n                type: 'warning'\r\n            })\r\n                .then(() => {\r\n                    this.$message.success('删除成功');\r\n                    this.tableData.splice(index, 1);\r\n                })\r\n                .catch(() => {});\r\n        },\r\n        // 多选操作\r\n        handleSelectionChange(val) {\r\n            this.multipleSelection = val;\r\n        },\r\n        delAllSelection() {\r\n            const length = this.multipleSelection.length;\r\n            let str = '';\r\n            this.delList = this.delList.concat(this.multipleSelection);\r\n            for (let i = 0; i < length; i++) {\r\n                str += this.multipleSelection[i].name + ' ';\r\n            }\r\n            this.$message.error(`删除了${str}`);\r\n            this.multipleSelection = [];\r\n        },\r\n        // 编辑操作\r\n        handleEdit(index, row) {\r\n                   \r\n                    localStorage.setItem('article_id', row.id);\r\n                    this.$router.push('/article_edit');\r\n        },\r\n    \r\n        // 分页导航\r\n        handlePageChange(val) {\r\n            this.$set(this.query, 'pageIndex', val);\r\n            this.getData();\r\n        },\r\n        // 添加操作\r\n        handleAdd() {\r\n            this.form={};\r\n            this.addVisible = true;\r\n            //查询父分类树\r\n            Axios.get(\"/api/category/tree\").then((response)=>{\r\n                this.options=response.data;\r\n             \r\n            })\r\n            \r\n        },\r\n        //选择父类\r\n        handleChange(value){\r\n \r\n            this.form.parentid=value[value.length-1];\r\n          \r\n        },\r\n        // 保存添加\r\n        saveAdd() {\r\n           \r\n            Axios.post(\"/api/category\",this.form).then((response)=>{\r\n                if(response.data.flag){\r\n                    this.$message.success(response.data.message);\r\n                }else{\r\n                    this.$message.error(response.data.message);\r\n                }\r\n            })\r\n             this.addVisible = false;\r\n            this.getData();\r\n        },\r\n    }\r\n};\r\n",null]}